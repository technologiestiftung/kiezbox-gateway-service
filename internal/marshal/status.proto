syntax = "proto3";

package meshtastic;

option go_package = "kiezbox/internal/marshal";

/*
 * This message is used for
 * KIEZBOX_CONTROL_APP PortNums.
 */
message KiezboxStatus {
    // A kiezbox is identified by its box ID and district ID
    uint32 box_id = 1; // only 8 bit used
    uint32 dist_id = 2; // only 8 bit used
    // The current power state of the connected WiFi router
    bool router_powered = 3;
    // Unix timestamp ( in seconds ), when the measurement was taken
    int64 unix_time = 4;
    // Temperature outside (but close) to the kiezbox ( in milli Celsius / m°C )
    int32 temperature_out = 5;
    // Temperature inside the kiezbox ( in milli Celsius / m°C )
    int32 temperature_in = 6;
    // Relative humidity inside the kiezbox ( as milli Percentage / m% )
    int32 humidity_in = 7;
    // Voltage of the solar panel ( in milli Volt / mV )
    int32 solar_voltage = 8;
    // Power output of the solar panel ( in Watt / W )
    int32 solar_power = 9;
    // Energy collected by the solar panel today ( in Watt/100 / dW )
    int32 solar_energy_day = 10;
    // Energy collected by the solar panel in total ( in Watt/100 / dW )
    int32 solar_energy_total = 11;
    // Voltage of the (main) battery ( in milli Volt / mV )
    int32 battery_voltage = 12;
    // Current of the (main) battery ( in milli Amps / mA )
    int32 battery_current = 13;
    // Temperature of the Real-time clock used in the kiezbox ( in milli Celsius / m°C )
    int32 temperature_rtc = 14;
}

// Request message for getting the Kiezbox status
message GetKiezboxStatusRequest {
  uint32 box_id = 1;
  uint32 dist_id = 2;
}

// Response message for getting the Kiezbox status
message GetKiezboxStatusResponse {
  KiezboxStatus status = 1;
}

// Service definition for Kiezbox operations
service KiezboxService {
  rpc GetKiezboxStatus(GetKiezboxStatusRequest) returns (GetKiezboxStatusResponse);
}
